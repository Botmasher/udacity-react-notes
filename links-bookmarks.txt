-------
1 REACT
-------

Composition - example implementing string capitalization:
https://www.linkedin.com/pulse/compose-me-function-composition-javascript-kevin-greene
|
Composition - build composable functions then write functional.js lib containing compose and pipe:
https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10

shouldComponentUpdate and are the rendered DOM elems equiv React updates decision tree:
https://facebook.github.io/react/docs/optimizing-performance.html#avoid-reconciliation
|
Diffing algorithm that decides to update:
https://facebook.github.io/react/docs/reconciliation.html#the-diffing-algorithm

How to think in React:
https://facebook.github.io/react/docs/thinking-in-react.html

Components - Stateless vs Stateless Functional vs Functional:
https://tylermcginnis.com/functional-components-vs-stateless-functional-components-vs-stateless-components/

Where should my state live?
https://facebook.github.io/react/docs/thinking-in-react.html#step-4-identify-where-your-state-should-live
|
Using state correctly:
https://facebook.github.io/react/docs/state-and-lifecycle.html

PropTypes type checking:
https://facebook.github.io/react/docs/typechecking-with-proptypes.html

Regular Expressions for pattern matching:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions

Relationships between component lifecycle hooks:
https://d17h27t6h515a5.cloudfront.net/topher/2017/June/59519fa9_nd019-c1-l4-lifecycle-events/nd019-c1-l4-lifecycle-events.png

Tyler's React courses incl Router:
https://tylermcginnis.com/courses/

React Router's BrowserRouter component uses history to let App respond to URL changes:
https://github.com/reacttraining/history

How to build your own router:
https://tylermcginnis.com/build-your-own-react-router-v4/

Easyish but helpful readings (course outro):
https://medium.com/@dan_abramov/youre-missing-the-point-of-react-a20e34a51e1a
https://tylermcginnis.com/react-aha-moments/
https://camjackson.net/post/9-things-every-reactjs-beginner-should-know
https://tylermcginnis.com/react-elements-vs-react-components/

MyReads code style guides:
http://udacity.github.io/frontend-nanodegree-styleguide/
|
MyReads rubric:
https://review.udacity.com/#!/rubrics/918/view


-------
2 REDUX
-------

- Three principles of Redux:
http://redux.js.org/docs/introduction/ThreePrinciples.html#three-principles

- Functional programming and pure functions:
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0

--------
3 NATIVE
--------


-----
SLACK
-----

React Cheatsheet:
http://ricostacruz.com/cheatsheets/react.html